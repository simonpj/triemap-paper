\let\Bbbk\relax
%include polycode.fmt

%format (at x) = "@" x

%if style == poly
%format nil = "\tick" []
%format :~> = "\mathop{{:}{\rightsquigarrow}}"
%format :~: = "\mathop{{:}{\sim}{:}}"
%format :~~: = "\mathop{{:}{\approx}{:}}"
%subst conid a = "\conid{" a "}"
%subst varid a = "\varid{" a "}"
%subst keyword a = "\keyword{" a "}"
%format ^^ = "\;"
%format ^^^ = "\,"
%format ^^^^ = " "
%format blank = " "
%format ## = "\!"
%format (FromNat x) = x
%format BOX = "\square"
%format ~ = "\,\sim\,"
%format qquad = "\qquad"
%format com = "\text{-}\text{-}"
%format bang = "!"
%format family = "\keyword{family}"
%format pattern = "\keyword{pattern}"
%format COMPLETE = "\keyword{complete}"
%format RULES = "\keyword{RULES}"
%format NOINLINE = "\keyword{noinline}"
%format /~ = "\not\sim"
%format =-> = "\mapsto"
%format dollar = $
%format ~> = "\twoheadrightarrow"
%format th_d_open = "[\id{d}|\;"
%format th_d_close = |]
   % the above one is unnecessary, but included for completeness
%format ghci = "\lambda\!"
%format /\ = "\wedge"
%format pi = "\Pi"
%format tau = "\tau"
%format taus = "\overline\tau"
%format upsilon = "\upsilon"
%format upsilons = "\overline\upsilon"
%format sigma = "\sigma"
%format alpha = "\alpha"
%format alphas = "\overline\alpha"
%format beta = "\beta"
%format <$ = "\mathop{\raisebox{0.025em}{$<$}\hspace{-0.16em}{\$}}"
%format <$$ = "\mathop{\raisebox{0.025em}{$<$}\hspace{-0.16em}{\$}\hspace{-0.18em}{\$}}"
%format <$> = "\mathop{{\langle}{\$}{\rangle}}"
%format <*> = "\mathop{{\langle}{*}{\rangle}}"
%format <|> = "\mathop{{<}{|}{>}}"
%format >=> = "\mathrel{{>}\hspace{-0.32em}{=}\hspace{-0.32em}{>}}"
%format >>  = "\mathrel{{>}\hspace{-0.4em}{>}}"
%format >>> = "\mathrel{{>}\hspace{-0.4em}{>}\hspace{-0.4em}{>}}"
%format |> = "\triangleright"
%format |-> = "\mapsto"

%format ^ = "\string^"
%format bottom = "\bot"
%format prag_begin = "\{-{\#}"
%format prag_end = "{\#}{-}\}"
%format k1
%format k2

% suppress some built-in formatting of lhs2TeX:
%format not = "\varid{not}"
%format == = "{}\mathop{==}{}"
%format /= = "\mathop{{/}{=}}"
%format && = "\mathop{\&\&}"
%format ++ = "\mathop{++}"
%format undefined = "\varid{undefined}"

%else
%format KK = k
%format ^^ =
%format ^^^ =
%format ^^^^ =
%format blank =
%format ## =
%format qquad =
%format com = --
%format \* = *
%format nil = TICK []
%format dollar = $
%format begin_comment = "{-"
%format end_comment = "-}"
%format th_d_open = "[d|"
%format prag_begin = "{-#"
%format prag_end = "#-}"

%endif

%if False
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% forall.fmt
%
% *EXPERIMENTAL*
% Semi-automatic formatting of the . as either function
% composition (normally) or a period (when used after a
% forall).
%
% Permission is granted to include this file (or parts of this file)
% literally into other documents, regardless of the conditions or
% license applying to these documents.
%
% Andres Loeh, November 2005, ver 1.1
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%endif
%if not lhs2tex_forall_fmt_read
%let lhs2tex_forall_fmt_read = True
%include lhs2TeX.fmt
%
%if style /= newcode
%
% First, let's redefine the forall, and the dot.
%
%format forall    = forall_ "\hsforall "
%format exists    = exists_ "\hsexists "
%format .         = "\hsdot{" `comp_` "}{" period_ "}"
%format `comp_`   = "\circ "
%format period_   = ".\,"
%format forall_   = "\keyword{$\forall$}\!\! "
%format exists_   = "\keyword{$\exists$}\!\! "
%
% This is made in such a way that after a forall, the next
% dot will be printed as a period, otherwise the formatting
% of `comp_` is used. By redefining `comp_`, as suitable
% composition operator can be chosen. Similarly, period_
% is used for the period.
%
\ReadOnlyOnce{forall.fmt}%
\makeatletter

% The HaskellResetHook is a list to which things can
% be added that reset the Haskell state to the beginning.
% This is to recover from states where the hacked intelligence
% is not sufficient.

\let\HaskellResetHook\empty
\newcommand*{\AtHaskellReset}[1]{%
  \g@@addto@@macro\HaskellResetHook{#1}}
\newcommand*{\HaskellReset}{\HaskellResetHook}

\global\let\hsforallread\empty
\global\let\hsexistsread\empty

\newcommand\hsforall{\global\let\hsdot=\hsperiodonce}
\newcommand\hsexists{\global\let\hsdot=\hsperiodonce}
\newcommand*\hsperiodonce[2]{#2\global\let\hsdot=\hscompose}
\newcommand*\hscompose[2]{#1}

\AtHaskellReset{\global\let\hsdot=\hscompose}

% In the beginning, we should reset Haskell once.
\HaskellReset

\makeatother
\EndFmtInput
%endif
%endif
